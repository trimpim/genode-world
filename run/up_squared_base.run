#
# run script to start a UP2 board
#  this is a very minimal base system that provides
#  a sub init to start further components.
#

# source the platform driver config
source ${genode_dir}/repos/base/run/platform_drv.inc

set build_components {
	drivers/input
	drivers/usb
	drivers/rtc
	drivers/nic
	drivers/timer
	drivers/framebuffer
	lib/vfs/lxip
	server/ram_fs
	server/usb_terminal
	server/vfs
}

append_platform_drv_build_components

# override defaults of platform_drv.inc
proc platform_drv_priority {} { return { priority="-1"} }

build $build_components

create_boot_directory

set boot_modules {
	core
	fb_drv
	init
	ld.lib.so
	libc.lib.so
	libc_noux.lib.so
	libm.lib.so
	lxip.lib.so
	nic_drv
	ram_fs
	report_rom
	rtc_drv
	timer
	usb_drv
	usb_terminal
	vfs
	vfs_lxip.lib.so
}

append_platform_drv_boot_modules

set config {
<config prio_levels="4">

	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>

	<resource name="RAM" preserve="8M"/>
	<default caps="100"/>

}

append_platform_drv_config

append config {

	<start name="timer" priority="-1" caps="100">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Timer"/> </provides>
		<route>
			<service name="PD"> <parent/> </service>
			<service name="RM"> <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="ROM"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
		</route>
	</start>

	<start name="rtc_drv" priority="-1" caps="100">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Rtc"/> </provides>
		<route>
			<service name="IO_PORT"> <parent/> </service>
			<service name="PD"> <parent/> </service>
			<service name="RM"> <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="ROM"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
		</route>
	</start>

	<start name="nic_drv" priority="-1" caps="100">
		<resource name="RAM" quantum="4M"/>
		<provides> <service name="Nic"/> </provides>
		<route>
			<service name="Platform"> <child name="platform_drv"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="PD"> <parent/> </service>
			<service name="RM"> <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="ROM"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
		</route>
	</start>

	<start name="usb_drv" priority="-1" caps="100">
		<resource name="RAM" quantum="12M"/>
		<provides>
			<service name="Input"/>
			<service name="Usb"/>
		</provides>
		<config uhci="yes" ohci="yes" ehci="yes" xhci="yes">
			<raw>
				<policy label="usb_terminal -> usb_serial" vendor_id="0x67b" product_id="0x2303"/>
			</raw>
			<hid/>
		</config>
		<route>
			<service name="Platform"> <child name="platform_drv"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="PD"> <parent/> </service>
			<service name="RM"> <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="ROM"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
		</route>
	</start>

	<start name="fb_drv" priority="-1" caps="200">
		<resource name="RAM" quantum="4M"/>
		<provides> <service name="Framebuffer"/> </provides>
		<route>
			<service name="ROM" unscoped_label="ld.lib.so"> <parent label="ld.lib.so"/> </service>
			<service name="ROM" unscoped_label="fb_drv"> <parent label="fb_drv"/> </service>
			<service name="Platform"> <child name="platform_drv"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="IO_PORT"> <parent/> </service>
			<service name="IO_MEM"> <parent/> </service>
			<service name="PD"> <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="ROM"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
		</route>
	</start>

	<start name="socket_fs" caps="200">
		<binary name="vfs"/>
		<resource name="RAM" quantum="32M"/>
		<provides> <service name="File_system"/> </provides>
			<config>
				<vfs>
					<lxip dhcp="yes"/>
				</vfs>
			</config>
		<route>
			<service name="ROM" label="socket_fs.config"> <child name="dynamic_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="usb_terminal">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Terminal"/></provides>
		<route>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

</config>
}

install_config $config

build_boot_image $boot_modules

run_genode_until forever
