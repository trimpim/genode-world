build test/glib

create_boot_directory

import_from_depot \
	genodelabs/src/[base_src] \
	genodelabs/src/init \

install_config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="200"/>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>
	<start name="test-glib">
		<resource name="RAM" quantum="400M"/>
		<config>
			<vfs>
				<!-- create an in-memory FS with what GLib expects -->
				<ram/>
				<dir name="home"> <ram/> </dir>
				<dir name="var"> <dir name="tmp"> <ram/> </dir> </dir>
				<dir name="dev"> <log/> </dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log"/>
			<env key="HOME" value="/home"/>
			<arg value="testglib"/>
			<arg value="--verbose"/>
		</config>
	</start>
</config>
}

build_boot_image {
	glib.lib.so
	libc.lib.so
	libiconv.lib.so
	libm.lib.so
	posix.lib.so
	pthread.lib.so
	test-glib
}

append qemu_args " -nographic  "

run_genode_until "child .* exited with exit value 0.*\n" 10

